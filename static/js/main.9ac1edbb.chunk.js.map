{"version":3,"sources":["components/SearchBar.tsx","components/SearchResults.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBar","SearchInput","placeholder","style","width","SearchResults","Table","aria-label","cells","rows","App","Page","header","PageHeader","logo","height","PageSection","variant","PageSectionVariants","light","sticky","hasShadowBottom","Bullseye","isFilled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAUeA,EAPG,kBAChB,cAACC,EAAA,EAAD,CACEC,YAAY,6BACZC,MAAO,CAAEC,MAAO,uC,2BCeLC,EAlBO,WAUpB,OACE,eAACC,EAAA,EAAD,CAAOC,aAAW,sBAAsBC,MAV1B,CAAC,eAAgB,WAAY,gBAAiB,aAAc,eAUlBC,KAT7C,CACX,CAAC,iBAAkB,aAAc,SAAU,gBAAiB,cAC5D,CAAC,iBAAkB,aAAc,SAAU,gBAAiB,cAC5D,CAAC,mBAAoB,eAAgB,WAAY,kBAAmB,gBACpE,CAAC,iBAAkB,aAAc,SAAU,gBAAiB,cAC5D,CAAC,iBAAkB,aAAc,SAAU,gBAAiB,cAC5D,CAAC,mBAAoB,eAAgB,WAAY,kBAAmB,iBAGpE,UACE,cAAC,IAAD,IACA,cAAC,IAAD,QCWSC,EAfO,WACpB,OACE,eAACC,EAAA,EAAD,CAAMC,OAAQ,cAACC,EAAA,EAAD,CAAYC,KAAM,cAAC,IAAD,CAAeX,MAAO,CAAEC,MAAO,MAAOW,OAAQ,WAA9E,UACE,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAoBC,MAAOC,OAAO,MAAMC,iBAAe,EAA7E,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ,cAACN,EAAA,EAAD,CAAaC,QAASC,IAAoBC,MAAOI,UAAQ,EAAzD,SACE,cAAC,EAAD,UCPOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ac1edbb.chunk.js","sourcesContent":["import React from 'react';\nimport { SearchInput } from '@patternfly/react-core';\n\nconst SearchBar = (): React.ReactElement => (\n  <SearchInput\n    placeholder=\"Search a GitHub repository\"\n    style={{ width: 'var(--pf-global--breakpoint--lg)' }}\n  />\n);\n\nexport default SearchBar;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\n\nconst SearchResults = (): React.ReactElement => {\n  const columns = ['Repositories', 'Branches', 'Pull requests', 'Workspaces', 'Last commit'];\n  const rows = [\n    ['Repository one', 'Branch one', 'PR one', 'Workspace one', 'Commit one'],\n    ['Repository two', 'Branch two', 'PR two', 'Workspace two', 'Commit two'],\n    ['Repository three', 'Branch three', 'PR three', 'Workspace three', 'Commit three'],\n    ['Repository one', 'Branch one', 'PR one', 'Workspace one', 'Commit one'],\n    ['Repository two', 'Branch two', 'PR two', 'Workspace two', 'Commit two'],\n    ['Repository three', 'Branch three', 'PR three', 'Workspace three', 'Commit three'],\n  ];\n  return (\n    <Table aria-label=\"Repo Search Results\" cells={columns} rows={rows}>\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nexport default SearchResults;\n","import React from 'react';\nimport {\n  PageHeader,\n  Page,\n  Bullseye,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport { GithubAltIcon } from '@patternfly/react-icons';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\n\nconst App: React.FC = () => {\n  return (\n    <Page header={<PageHeader logo={<GithubAltIcon style={{ width: '2em', height: '2em' }} />} />}>\n      <PageSection variant={PageSectionVariants.light} sticky=\"top\" hasShadowBottom>\n        <Bullseye>\n          <SearchBar />\n        </Bullseye>\n      </PageSection>\n      <PageSection variant={PageSectionVariants.light} isFilled>\n        <SearchResults />\n      </PageSection>\n    </Page>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}